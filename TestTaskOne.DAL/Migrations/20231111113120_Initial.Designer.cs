// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTaskOne.DAL;

#nullable disable

namespace TestTaskOne.DAL.Migrations
{
    [DbContext(typeof(TestTaskContext))]
    [Migration("20231111113120_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestTaskOne.Core.Models.Nomenclature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nomenclatures");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.NomenclatureLink", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NomenclatureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ProductId", "NomenclatureId");

                    b.HasIndex("NomenclatureId");

                    b.ToTable("NomenclaturesLinks");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("ffd226dc-ceb5-4138-9cc5-c886a687dc80"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            ProductId = new Guid("ffd226dc-ceb5-4138-9cc5-c886a687dc80"),
                            NomenclatureId = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94")
                        },
                        new
                        {
                            ProductId = new Guid("ffd226dc-ceb5-4138-9cc5-c886a687dc80"),
                            NomenclatureId = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047")
                        },
                        new
                        {
                            ProductId = new Guid("ffd226dc-ceb5-4138-9cc5-c886a687dc80"),
                            NomenclatureId = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52")
                        },
                        new
                        {
                            ProductId = new Guid("ffd226dc-ceb5-4138-9cc5-c886a687dc80"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            ProductId = new Guid("d754f72b-b788-4d0c-867f-ce3b09c36aed"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            ProductId = new Guid("d754f72b-b788-4d0c-867f-ce3b09c36aed"),
                            NomenclatureId = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69")
                        },
                        new
                        {
                            ProductId = new Guid("d754f72b-b788-4d0c-867f-ce3b09c36aed"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            ProductId = new Guid("da03a140-ce82-4ed7-b999-5cb11144fffc"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            ProductId = new Guid("da03a140-ce82-4ed7-b999-5cb11144fffc"),
                            NomenclatureId = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94")
                        },
                        new
                        {
                            ProductId = new Guid("da03a140-ce82-4ed7-b999-5cb11144fffc"),
                            NomenclatureId = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047")
                        },
                        new
                        {
                            ProductId = new Guid("da03a140-ce82-4ed7-b999-5cb11144fffc"),
                            NomenclatureId = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69")
                        },
                        new
                        {
                            ProductId = new Guid("da03a140-ce82-4ed7-b999-5cb11144fffc"),
                            NomenclatureId = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52")
                        },
                        new
                        {
                            ProductId = new Guid("da03a140-ce82-4ed7-b999-5cb11144fffc"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            ProductId = new Guid("da03a140-ce82-4ed7-b999-5cb11144fffc"),
                            NomenclatureId = new Guid("a9b4f7ba-cbdf-428d-98c0-42feea0fff0d")
                        });
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffd226dc-ceb5-4138-9cc5-c886a687dc80"),
                            Title = "Легковой автомобиль"
                        },
                        new
                        {
                            Id = new Guid("d754f72b-b788-4d0c-867f-ce3b09c36aed"),
                            Title = "Персональный компьютер"
                        },
                        new
                        {
                            Id = new Guid("da03a140-ce82-4ed7-b999-5cb11144fffc"),
                            Title = "Подъемный кран"
                        });
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.Waybill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("PurchaseCost")
                        .HasColumnType("float");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Waybills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b1cd368-02ba-4516-b61c-6af91952e569"),
                            PurchaseCost = 8396.0,
                            PurchaseDate = new DateTime(2023, 6, 15, 4, 9, 30, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8ba6d9e5-502f-4542-9893-a184d1c9e42e"),
                            PurchaseCost = 4625.0,
                            PurchaseDate = new DateTime(2023, 4, 13, 6, 43, 59, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1421b940-02d3-4939-aa49-416c8b7e0b87"),
                            PurchaseCost = 9992.0,
                            PurchaseDate = new DateTime(2022, 7, 12, 13, 29, 17, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5f9332fc-4529-480c-8a5f-ea76ed37cd02"),
                            PurchaseCost = 5888.0,
                            PurchaseDate = new DateTime(2022, 10, 23, 12, 50, 43, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("67c0fb2d-44b7-4cb0-9c80-13a3d8dc9b2d"),
                            PurchaseCost = 1601.0,
                            PurchaseDate = new DateTime(2021, 7, 4, 14, 40, 30, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("84d41619-6286-4778-be86-f8741277688f"),
                            PurchaseCost = 9296.0,
                            PurchaseDate = new DateTime(2021, 11, 8, 7, 24, 21, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.WaybillItem", b =>
                {
                    b.Property<Guid>("WaybillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NomenclatureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WaybillId", "NomenclatureId");

                    b.HasIndex("NomenclatureId");

                    b.ToTable("WaybillItems");

                    b.HasData(
                        new
                        {
                            WaybillId = new Guid("9b1cd368-02ba-4516-b61c-6af91952e569"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            WaybillId = new Guid("9b1cd368-02ba-4516-b61c-6af91952e569"),
                            NomenclatureId = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94")
                        },
                        new
                        {
                            WaybillId = new Guid("9b1cd368-02ba-4516-b61c-6af91952e569"),
                            NomenclatureId = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047")
                        },
                        new
                        {
                            WaybillId = new Guid("9b1cd368-02ba-4516-b61c-6af91952e569"),
                            NomenclatureId = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69")
                        },
                        new
                        {
                            WaybillId = new Guid("9b1cd368-02ba-4516-b61c-6af91952e569"),
                            NomenclatureId = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52")
                        },
                        new
                        {
                            WaybillId = new Guid("9b1cd368-02ba-4516-b61c-6af91952e569"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            WaybillId = new Guid("9b1cd368-02ba-4516-b61c-6af91952e569"),
                            NomenclatureId = new Guid("a9b4f7ba-cbdf-428d-98c0-42feea0fff0d")
                        },
                        new
                        {
                            WaybillId = new Guid("8ba6d9e5-502f-4542-9893-a184d1c9e42e"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            WaybillId = new Guid("8ba6d9e5-502f-4542-9893-a184d1c9e42e"),
                            NomenclatureId = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94")
                        },
                        new
                        {
                            WaybillId = new Guid("8ba6d9e5-502f-4542-9893-a184d1c9e42e"),
                            NomenclatureId = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047")
                        },
                        new
                        {
                            WaybillId = new Guid("8ba6d9e5-502f-4542-9893-a184d1c9e42e"),
                            NomenclatureId = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69")
                        },
                        new
                        {
                            WaybillId = new Guid("8ba6d9e5-502f-4542-9893-a184d1c9e42e"),
                            NomenclatureId = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52")
                        },
                        new
                        {
                            WaybillId = new Guid("8ba6d9e5-502f-4542-9893-a184d1c9e42e"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            WaybillId = new Guid("8ba6d9e5-502f-4542-9893-a184d1c9e42e"),
                            NomenclatureId = new Guid("a9b4f7ba-cbdf-428d-98c0-42feea0fff0d")
                        },
                        new
                        {
                            WaybillId = new Guid("1421b940-02d3-4939-aa49-416c8b7e0b87"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            WaybillId = new Guid("1421b940-02d3-4939-aa49-416c8b7e0b87"),
                            NomenclatureId = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94")
                        },
                        new
                        {
                            WaybillId = new Guid("1421b940-02d3-4939-aa49-416c8b7e0b87"),
                            NomenclatureId = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047")
                        },
                        new
                        {
                            WaybillId = new Guid("1421b940-02d3-4939-aa49-416c8b7e0b87"),
                            NomenclatureId = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69")
                        },
                        new
                        {
                            WaybillId = new Guid("1421b940-02d3-4939-aa49-416c8b7e0b87"),
                            NomenclatureId = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52")
                        },
                        new
                        {
                            WaybillId = new Guid("1421b940-02d3-4939-aa49-416c8b7e0b87"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            WaybillId = new Guid("1421b940-02d3-4939-aa49-416c8b7e0b87"),
                            NomenclatureId = new Guid("a9b4f7ba-cbdf-428d-98c0-42feea0fff0d")
                        },
                        new
                        {
                            WaybillId = new Guid("5f9332fc-4529-480c-8a5f-ea76ed37cd02"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            WaybillId = new Guid("5f9332fc-4529-480c-8a5f-ea76ed37cd02"),
                            NomenclatureId = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94")
                        },
                        new
                        {
                            WaybillId = new Guid("5f9332fc-4529-480c-8a5f-ea76ed37cd02"),
                            NomenclatureId = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047")
                        },
                        new
                        {
                            WaybillId = new Guid("5f9332fc-4529-480c-8a5f-ea76ed37cd02"),
                            NomenclatureId = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69")
                        },
                        new
                        {
                            WaybillId = new Guid("5f9332fc-4529-480c-8a5f-ea76ed37cd02"),
                            NomenclatureId = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52")
                        },
                        new
                        {
                            WaybillId = new Guid("5f9332fc-4529-480c-8a5f-ea76ed37cd02"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            WaybillId = new Guid("5f9332fc-4529-480c-8a5f-ea76ed37cd02"),
                            NomenclatureId = new Guid("a9b4f7ba-cbdf-428d-98c0-42feea0fff0d")
                        },
                        new
                        {
                            WaybillId = new Guid("67c0fb2d-44b7-4cb0-9c80-13a3d8dc9b2d"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            WaybillId = new Guid("67c0fb2d-44b7-4cb0-9c80-13a3d8dc9b2d"),
                            NomenclatureId = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94")
                        },
                        new
                        {
                            WaybillId = new Guid("67c0fb2d-44b7-4cb0-9c80-13a3d8dc9b2d"),
                            NomenclatureId = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047")
                        },
                        new
                        {
                            WaybillId = new Guid("67c0fb2d-44b7-4cb0-9c80-13a3d8dc9b2d"),
                            NomenclatureId = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69")
                        },
                        new
                        {
                            WaybillId = new Guid("67c0fb2d-44b7-4cb0-9c80-13a3d8dc9b2d"),
                            NomenclatureId = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52")
                        },
                        new
                        {
                            WaybillId = new Guid("67c0fb2d-44b7-4cb0-9c80-13a3d8dc9b2d"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            WaybillId = new Guid("67c0fb2d-44b7-4cb0-9c80-13a3d8dc9b2d"),
                            NomenclatureId = new Guid("a9b4f7ba-cbdf-428d-98c0-42feea0fff0d")
                        },
                        new
                        {
                            WaybillId = new Guid("84d41619-6286-4778-be86-f8741277688f"),
                            NomenclatureId = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624")
                        },
                        new
                        {
                            WaybillId = new Guid("84d41619-6286-4778-be86-f8741277688f"),
                            NomenclatureId = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94")
                        },
                        new
                        {
                            WaybillId = new Guid("84d41619-6286-4778-be86-f8741277688f"),
                            NomenclatureId = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047")
                        },
                        new
                        {
                            WaybillId = new Guid("84d41619-6286-4778-be86-f8741277688f"),
                            NomenclatureId = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69")
                        },
                        new
                        {
                            WaybillId = new Guid("84d41619-6286-4778-be86-f8741277688f"),
                            NomenclatureId = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52")
                        },
                        new
                        {
                            WaybillId = new Guid("84d41619-6286-4778-be86-f8741277688f"),
                            NomenclatureId = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c")
                        },
                        new
                        {
                            WaybillId = new Guid("84d41619-6286-4778-be86-f8741277688f"),
                            NomenclatureId = new Guid("a9b4f7ba-cbdf-428d-98c0-42feea0fff0d")
                        });
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.Component", b =>
                {
                    b.HasBaseType("TestTaskOne.Core.Models.Nomenclature");

                    b.ToTable("Components");

                    b.HasData(
                        new
                        {
                            Id = new Guid("547b7d31-5587-458c-94bf-c9c784bbd624"),
                            Title = "Болт"
                        },
                        new
                        {
                            Id = new Guid("a435b233-ff88-4b59-ae57-403f2e9dea94"),
                            Title = "КПП"
                        },
                        new
                        {
                            Id = new Guid("f6a58813-a64e-4c43-8cdb-176ee1f02047"),
                            Title = "Шестеренка"
                        },
                        new
                        {
                            Id = new Guid("be65e6a5-6eec-4202-af34-9bfffac3ec69"),
                            Title = "Плата управления"
                        });
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.Material", b =>
                {
                    b.HasBaseType("TestTaskOne.Core.Models.Nomenclature");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0fda203e-0a1b-491e-9e48-6ddf5d15fa52"),
                            Title = "Резина"
                        },
                        new
                        {
                            Id = new Guid("703d47c5-2e2f-4142-b35e-3b302a11e63c"),
                            Title = "Аллюминий"
                        },
                        new
                        {
                            Id = new Guid("a9b4f7ba-cbdf-428d-98c0-42feea0fff0d"),
                            Title = "Стекло"
                        });
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.NomenclatureLink", b =>
                {
                    b.HasOne("TestTaskOne.Core.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestTaskOne.Core.Models.Product", "Product")
                        .WithMany("ElementsUsed")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.WaybillItem", b =>
                {
                    b.HasOne("TestTaskOne.Core.Models.Nomenclature", "Nomenclature")
                        .WithMany()
                        .HasForeignKey("NomenclatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestTaskOne.Core.Models.Waybill", "Waybill")
                        .WithMany("PurchaseItems")
                        .HasForeignKey("WaybillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nomenclature");

                    b.Navigation("Waybill");
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.Component", b =>
                {
                    b.HasOne("TestTaskOne.Core.Models.Nomenclature", null)
                        .WithOne()
                        .HasForeignKey("TestTaskOne.Core.Models.Component", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.Material", b =>
                {
                    b.HasOne("TestTaskOne.Core.Models.Nomenclature", null)
                        .WithOne()
                        .HasForeignKey("TestTaskOne.Core.Models.Material", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.Product", b =>
                {
                    b.Navigation("ElementsUsed");
                });

            modelBuilder.Entity("TestTaskOne.Core.Models.Waybill", b =>
                {
                    b.Navigation("PurchaseItems");
                });
#pragma warning restore 612, 618
        }
    }
}
